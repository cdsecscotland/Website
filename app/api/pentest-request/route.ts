import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const data = await request.json();
    
    // Validate required fields
    if (!data.firstName || !data.lastName || !data.email || !data.company) {
      return NextResponse.json(
        { success: false, error: 'Missing required fields' },
        { status: 400 }
      );
    }

    // Prepare HubSpot form submission data
    const formData = new FormData();
    
    // Use only the 4 fields that exist in the HubSpot form
    formData.append('firstname', data.firstName);
    formData.append('lastname', data.lastName);
    formData.append('email', data.email);
    
    // Put everything else in the request details field
    const requestDetails = `PENETRATION TEST REQUEST

Company: ${data.company}
Job Title: ${data.jobTitle || 'Not specified'}
Phone: ${data.phone || 'Not provided'}

${data.detailedRequirements}`;

    formData.append('request_details', requestDetails);

    // Convert FormData to URLSearchParams for proper submission
    const urlParams = new URLSearchParams();
    for (const [key, value] of formData.entries()) {
      urlParams.append(key, value as string);
    }

    // Submit to existing HubSpot contact form
    const hubspotResponse = await fetch(
      `https://api.hsforms.com/submissions/v3/integration/submit/144330761/1cb05ab1-3bb5-4624-a0a3-b60813086a24`,
      {
        method: 'POST',
        body: urlParams,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      }
    );

    if (hubspotResponse.ok) {
      return NextResponse.json({ success: true });
    } else {
      console.error('HubSpot submission failed:', await hubspotResponse.text());
      return NextResponse.json(
        { success: false, error: 'Failed to submit to HubSpot' },
        { status: 500 }
      );
    }

  } catch (error) {
    console.error('Pentest request API error:', error);
    return NextResponse.json(
      { success: false, error: 'Internal server error' },
      { status: 500 }
    );
  }
}